name: CI/CD Pipeline

on:
  push:
    branches:
      - dev
      - main
    paths:
      - "src/**"
      - "*.gradle"
      - "gradle.properties"
      - ".github/**"
  workflow_dispatch:

permissions:
  contents: write

jobs:
  dev-pipeline:
    name: Dev Pipeline (Format, Test, Build)
    runs-on: ubuntu-latest
    timeout-minutes: 15
    if: github.ref == 'refs/heads/dev' # 在 dev 分支执行
    env:
      JAVA_VERSION: 21
      GRADLE_OPTS: "-Dorg.gradle.daemon=false"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          fetch-depth: 0
          set-safe-directory: true # 启用安全目录

      - name: Fix permissions
        run: chmod +x gradlew

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: temurin

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          gradle-version: wrapper
          cache-read-only: false # 允许写入缓存

      - name: Run Tests
        run: ./gradlew test --parallel --max-workers=4

      - name: Auto-format code
        run: |
          ./gradlew spotlessApply
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add -u
          if git diff-index --quiet HEAD --; then
            echo "No formatting changes"
          else
            git commit -m "style: auto-format code [skip ci]"
            git push "https://$GITHUB_ACTOR:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git" HEAD:dev
          fi

      - name: Build and Upload Artifact
        run: ./gradlew build --build-cache
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # 上传 JAR 文件
      - name: Upload Dev Artifact
        uses: actions/upload-artifact@v4
        with:
          name: dev-mod-package
          path: build/libs/*.jar

      # 上传测试报告
      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-dev
          path: |
            build/test-results/test/**/*.xml
            build/reports/tests/test/

  main-pipeline:
    name: Main Pipeline (Build and Release)
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' # 在 main 分支执行
    timeout-minutes: 15
    env:
      JAVA_VERSION: 21
      GRADLE_OPTS: "-Dorg.gradle.daemon=false"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          set-safe-directory: true

      - name: Fix permissions
        run: chmod +x gradlew

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: temurin

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          gradle-version: wrapper
          cache-read-only: true # 读取缓存

      - name: Build Artifact
        run: ./gradlew build --build-cache

      - name: Upload Artifact for Release
        uses: actions/upload-artifact@v4
        with:
          name: mod-package
          path: build/libs/*.jar

  release:
    name: Publish Release
    needs: main-pipeline # 依赖 main 分支的构建作业
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: release
    permissions:
      contents: write

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: mod-package
          path: release-files/

      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          files: release-files/*.jar
          draft: true
          generate_release_notes: true
